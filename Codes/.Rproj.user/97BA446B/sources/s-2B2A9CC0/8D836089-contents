
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph)
library(ggplot2)

######  General parameters ################# 

 
n.herds  <- 20 #Nb de troupeaux
n.generations <- 50 # Nb de générations


# Parameters 
param.default <- list(n.ram = 2,
                      n.ewe = 40,
                      career.ram = 8,
                      career.ewe = 8,
                      age.min.ram = 0,
                      age.min.ewe = 0,
                      age.repro.ewe = 3,
                      age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds. 



#################" SIMULATION 1 : independent herds : no exchange

# Network
herds.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(herds.Network, mode = c("directed")))



# Simulation 
LHerds <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network)

# InBreeding 
inBreeding <- computeInbreedingFunction(LHerds)  
inBreeding$herd <- as.factor(inBreeding$herd)

ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
 

#################" SIMULATION 2 : Hub : one people gives to all the others

herds.Network <- diag(0,n.herds)
herds.Network[,1] <- 1
herds.Network[n.herds,1] <- 0
herds.Network[n.herds,n.herds] <- 1
plot(graph_from_adjacency_matrix(t(herds.Network), mode = c("directed")))


# Simulation 
LHerds <- Simulate.herds(n.herds,n.generations,param.allHerds = param,herds.Network)

# InBreeding 
inBreeding <- computeInbreedingFunction(LHerds)  
inBreeding$herd <- as.factor(inBreeding$herd)

ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() +   ggtitle('Hub network')


#################" SIMULATION 3 : random network

set.seed(1)
test  = TRUE
while(test){
  herds.Network <- matrix(sample(c(0,1),(n.herds)^2,replace=TRUE,prob = c(9/10,1/10)),(n.herds),(n.herds))
  diag(herds.Network) <- 0
  herds.Network[1,] <- herds.Network[,1] <- 0
  herds.Network[1,1] <- 1
  test  = sum((rowSums(herds.Network)==0)) >0
}



plot(graph_from_adjacency_matrix(t(herds.Network), mode = c("directed")))



LHerds <- Simulate.herds(n.herds ,n.generations,param.allHerds = param,herds.Network)
inBreeding <- computeInbreedingFunction(LHerds)  
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot()  + ggtitle('Random network')



#################" SIMULATION 4 :  chain


herds.Network <- diag(0,n.herds)
for (i in 2:n.herds){
  herds.Network[i,i-1] <- 1
}
herds.Network[1,n.herds-1] <- 1
herds.Network[n.herds,n.herds-1] <- 0
herds.Network[n.herds,n.herds] <- 1


plot(graph_from_adjacency_matrix(t(herds.Network), mode = c("directed")))



LHerds <- Simulate.herds(n.herds ,n.generations,param.allHerds = param,herds.Network)
inBreeding <- computeInbreedingFunction(LHerds)  
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot()+ ggtitle('Chain network')



#################" SIMULATION 5 :  complete network


herds.Network <- matrix(1,n.herds,n.herds)
herds.Network[,1] <- herds.Network[1,] <- 0
herds.Network[1,1] <- 1

plot(graph_from_adjacency_matrix(t(herds.Network), mode = c("directed")))

LHerds <- Simulate.herds(n.herds ,n.generations,param.allHerds = param,herds.Network)
inBreeding <- computeInbreedingFunction(LHerds)  
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot()+ ggtitle('Chain network')

