param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
####################################################################""
#################" SIMULATION 1 : independent herds : no exchange
#######################################################################"
# Network
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
n.herds  <- 1 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
inBreeding <- compute.inbreeding(LHerds)
Lherds[[1]]
LHerds[[1]]$sex
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/demo_SimuMultiHerds.R')
n.herds <- length(LHerds)
n.herds
size.herds <- sapply(1:n.herds,function(i){nrow(LHerds[[i]])})
### construction de la généalogie
ped <- do.call("rbind",LHerds)
ped
dim(ped)
ped <- ped[!duplicated(ped$ind),]
dim(ped)
code.no.parents <- as.character(ped$father[which(ped$father=='0')][1])
code.no.parents
LEV = unique(c(levels(ped$ind),levels(ped$father),levels(ped$mother)))
LEV
ped$ind
ped$father
ped$mother
levels(ped$mother)
is.factor(ped$ind)
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/functions/modules_simulation.R')
if(!is.factor(ped$mother)){ped$mother <- as.factor(ped$mother)}
if(!is.factor(ped$ind)){ped$ind <- as.factor(ped$ind)}
if(!is.factor(ped$father)){ped$father <- as.factor(ped$father)}
if(!is.factor(ped$mother)){ped$mother <- as.factor(ped$mother)}
LEV = unique(c(levels(ped$ind),levels(ped$father),levels(ped$mother)))
LEV
ped$ind=as.numeric(factor(ped$ind,levels=LEV))
ped$ind
ped$father=as.numeric(factor(ped$father,levels=LEV))
ped$mother=as.numeric(factor(ped$mother,levels=LEV))
ped$father[ped$father == ped$father[1]]=0
ped$mother[ped$mother == ped$mother[1]]=0
num_sex<- rep(2,length(ped$sex))
num_sex[ped$sex=='M'] <- 1
ped$sex = num_sex
geneal <- gen.genealogy(ped)
u <- which(ped$herd!=-1)
inBreed <- gen.f(geneal,u)
U <- as.data.frame(cbind(ped$herd[u],inBreed))
U
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/functions/modules_simulation.R')
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/functions/modules_simulation.R')
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.herds  <- 1 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
####################################################################""
#################" SIMULATION 1 : independent herds : no exchange
#######################################################################"
# Network
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
# InBreeding
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding$herd
inBreeding <- compute.inbreeding(LHerds)
inBreeding
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
####################################################################""
#################" SIMULATION 1 : independent herds : no exchange
#######################################################################"
# Network
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
n.herds  <- 1 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
inBreeding <- compute.inbreeding(LHerds)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/demo_SimuMultiHerds.R')
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.herds  <- 1 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
####################################################################""
#################" SIMULATION 1 : independent herds : no exchange
#######################################################################"
# Network
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
# InBreeding
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
n.herds  <- 2 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
source('~/WORK_LOCAL/RECHERCHE/TRAVAUX_DE_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/CodesPastodiv/demo_SimuMultiHerds.R')
n.herds <- length(LHerds)
size.herds <- sapply(1:n.herds,function(i){nrow(LHerds[[i]])})
### construction de la généalogie
ped <- do.call("rbind",LHerds)
ped <- ped[!duplicated(ped$ind),]
ped
code.no.parents <- as.character(ped$father[which(ped$father=='0')][1])
code.no.parents
if(!is.factor(ped$ind)){ped$ind <- as.factor(ped$ind)}
if(!is.factor(ped$father)){ped$father <- as.factor(ped$father)}
if(!is.factor(ped$mother)){ped$mother <- as.factor(ped$mother)}
LEV = unique(c(levels(ped$ind),levels(ped$father),levels(ped$mother)))
LEV
ped$ind=as.numeric(factor(ped$ind,levels=LEV))
ped$father=as.numeric(factor(ped$father,levels=LEV))
ped$mother=as.numeric(factor(ped$mother,levels=LEV))
ped$mother
ped
ped$father[which(ped$father=='0')][1]
ped$father[1]
ped$father[ped$father == ped$father[1]]=0
ped$mother[ped$mother == ped$mother[1]]=0
ped$mother
num_sex<- rep(2,length(ped$sex))
num_sex[ped$sex=='M'] <- 1
ped$sex = num_sex
ped
ped[sort(ped$ind),]
is.numeric(ped$ind)
ped[order(ped$ind),]
n.herds
LEV = unique(c(levels(ped$ind),levels(ped$father),levels(ped$mother)))
ped$ind=as.numeric(factor(ped$ind,levels=LEV))
ped$father=as.numeric(factor(ped$father,levels=LEV))
ped$mother=as.numeric(factor(ped$mother,levels=LEV))
ped$father
n.herds <- length(LHerds)
size.herds <- sapply(1:n.herds,function(i){nrow(LHerds[[i]])})
### construction de la généalogie
ped <- do.call("rbind",LHerds)
ped <- ped[!duplicated(ped$ind),]
code.no.parents <- as.character(ped$father[which(ped$father=='0')][1])
if(!is.factor(ped$ind)){ped$ind <- as.factor(ped$ind)}
if(!is.factor(ped$father)){ped$father <- as.factor(ped$father)}
if(!is.factor(ped$mother)){ped$mother <- as.factor(ped$mother)}
LEV = unique(c(levels(ped$ind),levels(ped$father),levels(ped$mother)))
ped$ind=as.numeric(factor(ped$ind,levels=LEV))
ped$father=as.numeric(factor(ped$father,levels=LEV))
ped$mother=as.numeric(factor(ped$mother,levels=LEV))
ped$father[ped$father == ped$father[1]]=0
ped$mother[ped$mother == ped$mother[1]]=0
ped[1:50,]
res <- Simulate.herds(1,n.generations,list(param.allHerds[[1]]),herds.Network = NULL,LHerds=NULL,computeInbreeding  = FALSE)
n.herds
inBreeding2 <- compute.inbreeding(LHerds2)
LHerds2 <- lapply(1:n.herds,function(i){
res <- Simulate.herds(1,n.generations,list(param.allHerds[[1]]),herds.Network = NULL,LHerds=NULL,computeInbreeding  = FALSE)
return(res$LHerds[[1]])
}
)
inBreeding2 <- compute.inbreeding(LHerds2)
inBreeding2 <- lapply(1:n.herds,function(i){compute.inbreeding(list(LHerds2[[i]]))}
)
inBreeding2
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i})
inBreeding2 <- sapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i})
inBreeding2
inBreeding2 <- sapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding2
inBreeding2 <- sapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(t(U))})
inBreeding2
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i})
do.call("rbind",inBreeding2)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i})
do.call("rbind",inBreeding2)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i})
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
do.call("rbind",inBreeding2)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 - inBreeding
inBreeding <- compute.inbreeding(LHerds)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 <- do.call("rbind",inBreeding2)
inBreeding2
inBreeding <- compute.inbreeding(LHerds)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 <- do.call("rbind",inBreeding2)
inBreeding2 - inBreeding
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding$herd <- as.factor(inBreeding$herd)
inBreeding2$herd <- as.factor(inBreeding2$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding2,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding2,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
n.herds  <- 1à #Nb de troupeaux
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 4,
n.ewe = 80,
age.max.repro.ram = 8,
age.max.repro.ewe = 8,
age.min.repro.ewe = 3,
age.min.repro.ram = 1,
career.ram  = 10)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
LHerds
LHerds2 <- lapply(1:n.herds,function(i){
res <- Simulate.herds(1,n.generations,list(param.allHerds[[1]]),herds.Network = NULL,LHerds=NULL,computeInbreeding  = FALSE)
return(res$LHerds[[1]])
}
)
inBreeding <- compute.inbreeding(LHerds)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 <- do.call("rbind",inBreeding2)
inBreeding$herd <- as.factor(inBreeding$herd)
inBreeding2$herd <- as.factor(inBreeding2$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding2,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding2,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3 <- do.call("rbind",inBreeding2)
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3 <- do.call("rbind",inBreeding2)
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding3
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3 <- inBreeding <- compute.inbreeding(LHerds)
inBreeding3 <-  compute.inbreeding(LHerds2)
LHerds2
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3
inBreeding2 <- do.call("rbind",inBreeding3)
inBreeding3 <- do.call("rbind",inBreeding3)
inBreeding3
inBreeding <- compute.inbreeding(LHerds)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 <- do.call("rbind",inBreeding2)
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3 <- do.call("rbind",inBreeding3)
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding3$herd <- as.factor(inBreeding3$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding2,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding2,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
inBreeding <- compute.inbreeding(LHerds)
inBreeding2 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds[[i]])); U[,1]=i; return(U)})
inBreeding2 <- do.call("rbind",inBreeding2)
inBreeding3 <- lapply(1:n.herds,function(i){U <- compute.inbreeding(list(LHerds2[[i]])); U[,1]=i; return(U)})
inBreeding3 <- do.call("rbind",inBreeding3)
inBreeding2 - inBreeding
inBreeding$herd <- as.factor(inBreeding$herd)
inBreeding2$herd <- as.factor(inBreeding2$herd)
inBreeding3$herd <- as.factor(inBreeding3$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding2,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding2,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
ggplot(inBreeding2,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
dev.off()
dev.off')'
dev.off()
options(device = "RStudioGD")
ggplot(inBreeding3,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding3,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
version
