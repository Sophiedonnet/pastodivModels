# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
herds_size
herds_size <- herds_size %>% gather(size,  -c(gen))
herds_size <- herds_size %>% gather(size,value,  -c(gen))
herds_size
herds_size <- herds_size %>% gather(herd,size,  -c(gen))
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
herds_size <- as.data.frame(herds_size)
colnames(herds_size) <- 1:n.herds
herds_size$gen <- gen0:gen
herds_size
herds_size <- herds_size %>% gather(herd,size,  -c(gen))
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
herds_size
herds_size %>% gather(herd,size,  -c(gen))
herds_size <- herds_size %>% gather(herd,size,  -c(gen))
res = list(LHerds = LHerds,herds_size = herds_size)
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$herd <- as.factor(inBreedingTime$herd)
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
############ accident
LHerds[[1]] <- module.lose(LHerds[[1]],loseProportion = 0.5)
compute.herds.size(LHerds)
res2 <- Simulate.herds(n.herds,10,param.allHerds=param,herds.Network = herds.Network,LHerds=LHerds,computeInbreeding  = TRUE)
res2 <- Simulate.herds(n.herds,10,param.allHerds=param,herds.Network = NULL,LHerds=LHerds,computeInbreeding  = TRUE)
size.herds
size.herds <- res2$herds_size
size.herds
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$herd <- as.factor(inBreedingTime$herd)
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$herd <- as.factor(inBreedingTime$herd)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
source('~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Pierre-MatthieuSalpeteur/pastodivModels/Codes/functions/complete_simulation.R')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$herd <- as.factor(inBreedingTime$herd)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
res2$herds_size
ggplot(res2$herds_size,aes(col=herd,y=size,x=gen)) + geom_line() + ggtitle('One herd') +  theme(legend.position='none')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
############ accident
LHerds[[1]] <- module.lose(LHerds[[1]],loseProportion = 0.5)
compute.herds.size(LHerds)
res2 <- Simulate.herds(n.herds,10,param.allHerds=param,herds.Network = NULL,LHerds=LHerds,computeInbreeding  = TRUE)
size.herds <- res2$herds_size
ggplot(res2$herds_size,aes(col=herd,y=size,x=gen)) + geom_line() + ggtitle('Two herds after accident') +  theme(legend.position='none')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
############ accident
LHerds[[1]] <- module.lose(LHerds[[1]],loseProportion = 0.5)
compute.herds.size(LHerds)
res2 <- Simulate.herds(n.herds,10,param.allHerds=param,herds.Network = NULL,LHerds=LHerds,computeInbreeding  = TRUE)
size.herds <- res2$herds_size
ggplot(res2$herds_size,aes(col=herd,y=size,x=gen)) + geom_line() + ggtitle('Two herds after accident') +  theme(legend.position='none')
rm(list=(ls))
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
######  General parameters #################
n.generations <- 30 # Nb de générations
# Parameters
param.default <- list(n.ram = 5,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
####################################################################""
#################" SIMULATION 1 : 1 herd with accident
#######################################################################"
# Network
n.herds  <- 2 #Nb de troupeaux
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds=param,herds.Network = NULL,LHerds=NULL,computeInbreeding  = TRUE)
LHerds <- res$LHerds
# InBreeding  along time
inBreedingTime <- res$inBreeding
inBreedingTime$gen <- as.factor(inBreedingTime$gen)
ggplot(inBreedingTime,aes(col=gen,y=inBreed,x=gen)) + geom_boxplot() + ggtitle('One herd') +  theme(legend.position='none')
############ accident
LHerds[[1]] <- module.lose(LHerds[[1]],loseProportion = 0.5)
compute.herds.size(LHerds)
res2 <- Simulate.herds(n.herds,10,param.allHerds=param,herds.Network = NULL,LHerds=LHerds,computeInbreeding  = TRUE)
size.herds <- res2$herds_size
ggplot(res2$herds_size,aes(col=herd,y=size,x=gen)) + geom_line() + ggtitle('Two herds after accident') +  theme(legend.position='none')
inBreedingTime <- res2$inBreeding
inBreedingTime <- inBreedingTime %>% group_by(herd,gen) %>%summarise(mean_inbreed = mean(inBreed)) %>%mutate(herd = as.factor(herd))
ggplot(inBreedingTime,aes(y=mean_inbreed,x=gen,group=herd)) + geom_line(aes(linetype=herd, color=herd)) + ggtitle('Star + one isolated ')
size.herds <- res2$herds_size
ggplot(res2$herds_size,aes(col=herd,y=size,x=gen)) + geom_line() + ggtitle('Two herds after accident') +  theme(legend.position='none')
Y   = matrix(0,6,5)
Y[1,2] = Y[2,3:4] = Y[4,c(1,5)] = Y[6,5] = 1
library(sbm)
plotMyMatrix(Y,dimLabels = list(row = 'Students',col='Questions'))
rm(list=ls())
#---------------------------------------------------------------------
library(igraph)
set.seed(7)
U = 1:10
V = 1:15
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
rownames(Y) <- letters[1:length(U)]
colnames(Y) <- LETTERS[1:length(V)]
G <- graph_from_incidence_matrix(Y)
LO <- layout_as_bipartite(G)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3, layout=LO[,2:1],
vertex.label.degree = pi*V(G)$type, vertex.color=c("tomato","darkgreen")[V(G)$type+1])
library(sbm)
plotMyMatrix(Y,dimLabels = list(row='U',col='V'))
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
n.gene <- 10
U <- V <-  1:n.gene
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
colnames(Y) <- LETTERS[1:length(V)]
rm(list=ls())
#---------------------------------------------------------------------
library(igraph)
set.seed(7)
n.gene <- 10
U <- V <-  1:n.gene
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
G <- graph_from_incidence_matrix(Y)
LO <- layout_as_bipartite(G)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3, layout=LO[,2:1],
vertex.label.degree = pi*V(G)$type, vertex.color=c("tomato","darkgreen")[V(G)$type+1])
G <- graph_from_incidence_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3, layout=LO[,2:1],
vertex.label.degree = pi*V(G)$type, vertex.color=c("tomato","darkgreen")[V(G)$type+1])
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3, layout=LO[,2:1],
vertex.label.degree = pi*V(G)$type, vertex.color=c("darkgreen")[V(G)$type+1])
rm(list=ls())
#---------------------------------------------------------------------
library(igraph)
set.seed(7)
n.gene <- 10
U <- V <-  1:n.gene
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
G <- graph_from_incidence_matrix(Y)
G <- graph_from_incidence_matrix(Y)
G <- graph_from_adjacency_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3, layout=LO[,2:1],
vertex.label.degree = pi*V(G)$type, vertex.color=c("darkgreen")[V(G)$type+1])
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.label.degree = pi*V(G)$type, vertex.color=c("darkgreen")[V(G)$type+1])
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.label.degree, vertex.color=c("darkgreen")[V(G)$type+1])
rm(list=ls())
#---------------------------------------------------------------------
library(igraph)
set.seed(7)
n.gene <- 10
U <- V <-  1:n.gene
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
Y <- 0.5* (Y + t(Y))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
G <- graph_from_adjacency_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.label.degree, vertex.color=c("darkgreen")[V(G)$type+1])
G <- graph_from_adjacency_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.color=c("darkgreen")[V(G)$type+1])
vertex.color=c("darkgreen")
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.color=c("darkgreen"))
rm(list=ls())
#---------------------------------------------------------------------
library(igraph)
set.seed(7)
n.gene <- 10
U <- V <-  1:n.gene
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.7,0.3), replace = TRUE),length(U),length(V))
Y <- 0.5* (Y + t(Y))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
G <- graph_from_adjacency_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.color=c("darkgreen"))
diag(Y) <- 0
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.3,0.7), replace = TRUE),length(U),length(V))
Y <- 0.5* (Y + t(Y))
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
diag(Y) <- 0
G <- graph_from_adjacency_matrix(Y)
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.label.dist=3,
vertex.color=c("darkgreen"))
plot(G, vertex.label=V(G)$Name, margin = 5*c(-0.1,-0.1,-0.10,-0.1),
vertex.size= 17 , vertex.color=c("darkgreen"))
plot(G, vertex.label=V(G)$Name, vertex.size= 17 , vertex.color=c("darkgreen"))
plot(G, vertex.label=V(G)$Name, vertex.size= 17 ,vertex.label.dist=1 vertex.color=c("darkgreen"))
plot(G, vertex.label=V(G)$Name, vertex.size= 17 ,vertex.label.dist=1, vertex.color=c("darkgreen"))
plot(G, vertex.label=V(G)$Name, vertex.size= 17 ,vertex.label.dist=2, vertex.color=c("darkgreen"))
help("graph_from_adjacency_matrix")
G <- graph_from_adjacency_matrix(Y,mode = c("undirected"),diag = FALSE)
plot(G, vertex.label=V(G)$Name, vertex.size= 17 ,vertex.label.dist=2, vertex.color=c("darkgreen"))
plotMyMatrix(Y,dimLabels = list(row='U',col='V'))
Y
Y <- 0.5*(Y + t(Y))
Y
Y = matrix(sample(c(0,1),length(U)*length(V),prob =c(0.3,0.7), replace = TRUE),length(U),length(V))
Y <- (0.5*(Y + t(Y))>0)*1
rownames(Y) <- colnames(Y) <- paste('gene',1:n.gene)
diag(Y) <- 0
G <- graph_from_adjacency_matrix(Y,mode = c("undirected"),diag = FALSE)
plot(G, vertex.label=V(G)$Name, vertex.size= 17 ,vertex.label.dist=2, vertex.color=c("darkgreen"))
library(sbm)
plotMyMatrix(Y,dimLabels = list(row='U',col='V'))
plotMyMatrix(Y,dimLabels = 'gene')
rm(list=ls())
source('functions/modules_simulation.R')
source('functions/complete_simulation.R')
library(igraph,ggplot2)
library(tidyverse)
n.herds  <- 10 #Nb de troupeaux
n.generations <- 50 # Nb de générations
# Parameters
param.default <- list(n.ram = 3,
n.ewe = 40,
career.ram = 8,
career.ewe = 8,
age.min.ram = 0,
age.min.ewe = 0,
age.repro.ewe = 3,
age.repro.ram = 1)
param.default$rate.repro = as.data.frame(cbind(c(0,1,2),c(0,1,0)))
names(param.default$rate.repro) = c('nb.lambs','probability')
param= lapply(1:n.herds,function(i) param.default) # here same parameters for all the Herds.
ram.Network <- diag(1,n.herds)
plot(graph_from_adjacency_matrix(ram.Network, mode = c("directed")))
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
param.allHerds=param
LHerds = NULL
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds,herds.Network = herds.Network,LHerds=NULL,computeInbreeding  = FALSE)
LHerds <- res$LHerds
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() + ggtitle('independant ')
#######################################################################"
#################" SIMULATION 2 : Hub : one people gives to all the others
#######################################################################"
ram.Network <- diag(0,n.herds)
ram.Network[,1] <- 1
ram.Network[n.herds,1] <- 0
ram.Network[n.herds,n.herds] <- 1
herds.Network = list(ewe.for.replace= NULL,ram.for.replace = ram.Network,ram.for.repro = ram.Network)
plot(graph_from_adjacency_matrix(t(ram.Network), mode = c("directed")))
# Simulation
res <- Simulate.herds(n.herds,n.generations,param.allHerds = param,herds.Network = herds.Network,LHerds = NULL)
LHerds <- res$LHerds
# InBreeding
inBreeding <- computeInbreedingFunction(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
# InBreeding
inBreeding <- compute.inbreeding(LHerds)
inBreeding$herd <- as.factor(inBreeding$herd)
ggplot(inBreeding,aes(x=inBreed)) + geom_histogram()
ggplot(inBreeding,aes(col=herd,y=inBreed,x=herd)) + geom_boxplot() +   ggtitle('Hub network')
